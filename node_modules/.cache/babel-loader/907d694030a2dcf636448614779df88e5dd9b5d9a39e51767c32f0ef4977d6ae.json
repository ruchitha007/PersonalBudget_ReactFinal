{"ast":null,"code":"var _jsxFileName = \"D:\\\\NBAD\\\\NBAD-React_Final_Project-main_1\\\\NBAD-React_Final_Project-main\\\\src\\\\components\\\\Dashboard\\\\EconomicChart.js\",\n  _s = $RefreshSig$();\n//EconomicChart.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport apiService from '../services/apiService';\nimport '../../styles/EconomicChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EconomicChart = ({\n  token\n}) => {\n  _s();\n  const barChartCanvasRef = useRef(null);\n  const pieChartCanvasRef = useRef(null);\n  const lineChartCanvasRef = useRef(null);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [budgetData, setBudgetData] = useState([]);\n  const [budgetCapacity, setBudgetCapacity] = useState([]);\n  useEffect(() => {\n    const fetchDataAndCreateCharts = async () => {\n      try {\n        const budgetEndpoint = selectedMonth ? `/budgets/getAllBudgets/${selectedMonth}` : '/budgets/getAllBudgets';\n        const capacityEndpoint = selectedMonth ? `/budgets/capacity/${selectedMonth}` : '/budgets/capacity';\n        const [budgetResponse, capacityResponse] = await Promise.all([apiService.get(budgetEndpoint, token, {\n          params: {\n            month: parseInt(selectedMonth, 10)\n          }\n        }), apiService.get(capacityEndpoint, token)]);\n        const budgetData = budgetResponse.data || [];\n        const capacityData = capacityResponse.data || [];\n        setBudgetData(budgetData);\n        setBudgetCapacity(capacityData);\n        setLoading(false);\n        createBarChart();\n        pieChartCanvasRef();\n        createLineChart();\n      } catch (error) {\n        console.error('Error fetching budget data: ', error);\n        setLoading(false);\n      }\n    };\n    fetchDataAndCreateCharts();\n  }, [token, selectedMonth]);\n  useEffect(() => {\n    if (!loading) {\n      createBarChart();\n      createPieChart();\n      createLineChart();\n    }\n  }, [loading, budgetData, budgetCapacity]);\n  const createPieChart = () => {\n    const pieCanvas = pieChartCanvasRef.current;\n    if (!pieCanvas) {\n      console.error('Pie Canvas element not found');\n      return;\n    }\n    const pieCtx = pieCanvas.getContext('2d');\n    if (!pieCtx) {\n      console.error('Unable to get 2D context for pie canvas');\n      return;\n    }\n    try {\n      if (pieCanvas.chart) {\n        pieCanvas.chart.destroy();\n      }\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetname: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null\n        };\n      });\n      const pieData = combinedData.map((item, index) => {\n        const actualExpenditure = item.actualExpenditure || 0;\n        const budgetCapacity = item.budgetCapacity || 0;\n        const remainingBudget = budgetCapacity - actualExpenditure;\n        const backgroundColors = ['#FF5733', '#33FF7E', '#33A2FF', '#FF33A2', '#7E33FF', '#FF7E33', '#33FFA2', '#A2FF33', '#FF3333', '#33FF33', '#FFA233', '#FF33F5', '#7E7E7E', '#3333FF', '#7E33A2', '#7E33FF', '#33A2A2', '#33FF33', '#FFA27E', '#33A233'];\n        return {\n          label: item.budgetname,\n          data: [actualExpenditure, remainingBudget],\n          backgroundColor: backgroundColors[index % backgroundColors.length]\n        };\n      });\n      console.log('pieChartData:', pieData);\n      pieCanvas.chart = new Chart(pieCtx, {\n        type: 'pie',\n        data: {\n          labels: pieData.map(item => item.label),\n          datasets: [{\n            data: pieData.map(item => item.data[0]),\n            backgroundColor: pieData.map(item => item.backgroundColor)\n          }]\n        }\n      });\n    } catch (error) {\n      console.error('Error creating pie chart: ', error);\n    }\n  };\n  const createLineChart = async () => {\n    const lineCanvas = lineChartCanvasRef.current;\n    if (!lineCanvas) {\n      console.error('Line Canvas element not found');\n      return;\n    }\n    const lineCtx = lineCanvas.getContext('2d');\n    if (!lineCtx) {\n      console.error('Unable to get 2D context for line canvas');\n      return;\n    }\n    try {\n      if (lineCanvas.chart) {\n        lineCanvas.chart.destroy();\n      }\n      const cumulativeData = [];\n      for (let month = 1; month <= 12; month++) {\n        const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, token);\n        const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, token);\n        const budgetData = budgetsResponse.data || [];\n        const capacityData = capacityResponse.data || [];\n        let totalBudget = 0;\n        let totalCapacity = 0;\n        for (const item of budgetData) {\n          totalBudget += Number(item.budgetnumber) || 0;\n        }\n        for (const item of capacityData) {\n          totalCapacity += Number(item.budgetnumber) || 0;\n        }\n        cumulativeData.push({\n          month: month,\n          totalBudget: totalBudget,\n          totalCapacity: totalCapacity\n        });\n      }\n      const chartData = {\n        labels: cumulativeData.map(item => item.month),\n        datasets: [{\n          label: 'Cumulative Actual Budget',\n          backgroundColor: '#FF5733',\n          borderColor: '#FF5733',\n          data: cumulativeData.map(item => item.totalBudget),\n          fill: false\n        }, {\n          label: 'Cumulative Budget',\n          backgroundColor: '#33FF7E',\n          borderColor: '#33FF7E',\n          data: cumulativeData.map(item => item.totalCapacity),\n          fill: false\n        }]\n      };\n      lineCanvas.chart = new Chart(lineCtx, {\n        type: 'line',\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              type: 'category',\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n            },\n            y: {\n              type: 'linear',\n              position: 'left'\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating line chart: ', error);\n    }\n  };\n  const createBarChart = () => {\n    const canvas = barChartCanvasRef.current;\n    if (!canvas) {\n      console.error('Bar Chart Canvas element not found');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      console.error('Unable to get 2D context for Bar Chart canvas');\n      return;\n    }\n    try {\n      if (canvas.chart) {\n        canvas.chart.destroy();\n      }\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetName: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null\n        };\n      });\n      const chartData = {\n        labels: combinedData.map(item => item.budgetName),\n        datasets: [{\n          label: 'Actual Expenditure',\n          backgroundColor: '#FF5733',\n          data: combinedData.map(item => item.actualExpenditure)\n        }, {\n          label: 'Budget',\n          backgroundColor: '#33FF7E',\n          data: combinedData.map(item => item.budgetCapacity)\n        }]\n      };\n      canvas.chart = new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              stacked: true\n            },\n            y: {\n              stacked: true\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating bar chart: ', error);\n    }\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Various Types of Budget Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMonth,\n        onChange: handleMonthChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"January\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"February\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"March\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"April\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"May\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6\",\n          children: \"June\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7\",\n          children: \"July\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"8\",\n          children: \"August\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"9\",\n          children: \"September\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"October\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"11\",\n          children: \"November\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"12\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollable-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Current Period Budget Allocation versus Cumulative Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-canvas\",\n            ref: barChartCanvasRef,\n            width: 800,\n            height: 800\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Current Period Budget Allocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-pie-canvas\",\n            ref: pieChartCanvasRef,\n            width: 800,\n            height: 800\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Period Budget Allocation versus Cumulative Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"budget-line-canvas\",\n          ref: lineChartCanvasRef,\n          width: 400,\n          height: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No budget data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(EconomicChart, \"XTlw0mmR4FfktQKjBjGA86k27T4=\");\n_c = EconomicChart;\nexport default EconomicChart;\nvar _c;\n$RefreshReg$(_c, \"EconomicChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","apiService","jsxDEV","_jsxDEV","EconomicChart","token","_s","barChartCanvasRef","pieChartCanvasRef","lineChartCanvasRef","selectedMonth","setSelectedMonth","loading","setLoading","budgetData","setBudgetData","budgetCapacity","setBudgetCapacity","fetchDataAndCreateCharts","budgetEndpoint","capacityEndpoint","budgetResponse","capacityResponse","Promise","all","get","params","month","parseInt","data","capacityData","createBarChart","createLineChart","error","console","createPieChart","pieCanvas","current","pieCtx","getContext","chart","destroy","combinedData","map","dataItem","matchingCapacity","find","capacityItem","budgetname","actualExpenditure","budgetnumber","pieData","item","index","remainingBudget","backgroundColors","label","backgroundColor","length","log","type","labels","datasets","lineCanvas","lineCtx","cumulativeData","budgetsResponse","totalBudget","totalCapacity","Number","push","chartData","borderColor","fill","options","scales","x","y","position","canvas","ctx","budgetName","stacked","handleMonthChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","ref","width","height","_c","$RefreshReg$"],"sources":["D:/NBAD/NBAD-React_Final_Project-main_1/NBAD-React_Final_Project-main/src/components/Dashboard/EconomicChart.js"],"sourcesContent":["//EconomicChart.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport apiService from '../services/apiService';\nimport '../../styles/EconomicChart.css';\n\nconst EconomicChart = ({ token }) => {\n  const barChartCanvasRef = useRef(null);\n  const pieChartCanvasRef = useRef(null);\n  const lineChartCanvasRef = useRef(null);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [budgetData, setBudgetData] = useState([]);\n  const [budgetCapacity, setBudgetCapacity] = useState([]);\n\n  useEffect(() => {\n    const fetchDataAndCreateCharts = async () => {\n      try {\n        const budgetEndpoint = selectedMonth\n          ? `/budgets/getAllBudgets/${selectedMonth}`\n          : '/budgets/getAllBudgets';\n\n        const capacityEndpoint = selectedMonth\n          ? `/budgets/capacity/${selectedMonth}`\n          : '/budgets/capacity';\n\n        const [budgetResponse, capacityResponse] = await Promise.all([\n          apiService.get(budgetEndpoint, token, {\n            params: { month: parseInt(selectedMonth, 10) },\n          }),\n          apiService.get(capacityEndpoint, token),\n        ]);\n\n        const budgetData = budgetResponse.data || [];\n        const capacityData = capacityResponse.data || [];\n\n        setBudgetData(budgetData);\n        setBudgetCapacity(capacityData);\n        setLoading(false);\n\n        createBarChart();\n        pieChartCanvasRef();\n        createLineChart();\n        \n      } catch (error) {\n        console.error('Error fetching budget data: ', error);\n        setLoading(false);\n      }\n    };\n\n    fetchDataAndCreateCharts();\n  }, [token, selectedMonth]);\n\n  useEffect(() => {\n    if (!loading) {\n      createBarChart();\n      createPieChart();\n      createLineChart();\n      \n    }\n  }, [loading, budgetData, budgetCapacity]);\n  const createPieChart = () => {\n    const pieCanvas = pieChartCanvasRef.current;\n\n    if (!pieCanvas) {\n      console.error('Pie Canvas element not found');\n      return;\n    }\n\n    const pieCtx = pieCanvas.getContext('2d');\n    if (!pieCtx) {\n      console.error('Unable to get 2D context for pie canvas');\n      return;\n    }\n\n    try {\n      if (pieCanvas.chart) {\n        pieCanvas.chart.destroy();\n      }\n\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetname: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null,\n        };\n      });\n\n      const pieData = combinedData.map((item, index) => {\n        const actualExpenditure = item.actualExpenditure || 0;\n        const budgetCapacity = item.budgetCapacity || 0;\n        const remainingBudget = budgetCapacity - actualExpenditure;\n\n        const backgroundColors = [\n          '#FF5733', '#33FF7E', '#33A2FF', '#FF33A2', '#7E33FF', '#FF7E33', '#33FFA2', '#A2FF33', '#FF3333', '#33FF33',\n          '#FFA233', '#FF33F5', '#7E7E7E', '#3333FF', '#7E33A2', '#7E33FF', '#33A2A2', '#33FF33', '#FFA27E', '#33A233',\n        ];\n        \n\n        return {\n          label: item.budgetname,\n          data: [actualExpenditure, remainingBudget],\n          backgroundColor: backgroundColors[index % backgroundColors.length],\n        };\n      });\n\n      console.log('pieChartData:', pieData);\n\n      pieCanvas.chart = new Chart(pieCtx, {\n        type: 'pie',\n        data: {\n          labels: pieData.map(item => item.label),\n          datasets: [{\n            data: pieData.map(item => item.data[0]),\n            backgroundColor: pieData.map(item => item.backgroundColor),\n          }],\n        },\n      });\n    } catch (error) {\n      console.error('Error creating pie chart: ', error);\n    }\n  };\n\nconst createLineChart = async () => {\n  const lineCanvas = lineChartCanvasRef.current;\n\n  if (!lineCanvas) {\n    console.error('Line Canvas element not found');\n    return;\n  }\n\n  const lineCtx = lineCanvas.getContext('2d');\n  if (!lineCtx) {\n    console.error('Unable to get 2D context for line canvas');\n    return;\n  }\n\n  try {\n    if (lineCanvas.chart) {\n      lineCanvas.chart.destroy();\n    }\n    const cumulativeData = [];\n\n    for (let month = 1; month <= 12; month++) {\n      const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, token);\n      const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, token);\n      const budgetData = budgetsResponse.data || [];\n      const capacityData = capacityResponse.data || [];\n\n      let totalBudget = 0;\n      let totalCapacity = 0;\n\n      for (const item of budgetData) {\n        totalBudget += Number(item.budgetnumber) || 0;\n      }\n\n      for (const item of capacityData) {\n        totalCapacity += Number(item.budgetnumber) || 0;\n      }\n\n      cumulativeData.push({\n        month: month,\n        totalBudget: totalBudget,\n        totalCapacity: totalCapacity,\n      });\n    }\n\n    const chartData = {\n      labels: cumulativeData.map(item => item.month),\n      datasets: [\n        {\n          label: 'Cumulative Actual Budget',\n          backgroundColor: '#FF5733',\n          borderColor: '#FF5733',\n          data: cumulativeData.map(item => item.totalBudget),\n          fill: false,\n        },\n        {\n          label: 'Cumulative Budget',\n          backgroundColor: '#33FF7E',\n          borderColor: '#33FF7E',\n          data: cumulativeData.map(item => item.totalCapacity),\n          fill: false,\n        },\n        \n      ],\n    };\n\n    lineCanvas.chart = new Chart(lineCtx, {\n      type: 'line',\n      data: chartData,\n      options: {\n        scales: {\n          x: {\n            type: 'category',\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n          },\n        },\n      },\n    });\n  } catch (error) {\n    console.error('Error creating line chart: ', error);\n  }\n};\n\n\n  const createBarChart = () => {\n    const canvas = barChartCanvasRef.current;\n    if (!canvas) {\n      console.error('Bar Chart Canvas element not found');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      console.error('Unable to get 2D context for Bar Chart canvas');\n      return;\n    }\n\n    try {\n      if (canvas.chart) {\n        canvas.chart.destroy();\n      }\n\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetName: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null,\n        };\n      });\n\n      const chartData = {\n        labels: combinedData.map(item => item.budgetName),\n        datasets: [\n          {\n            label: 'Actual Expenditure',\n            backgroundColor: '#FF5733', \n            data: combinedData.map(item => item.actualExpenditure),\n          },\n          {\n            label: 'Budget',\n            backgroundColor: '#33FF7E', \n            data: combinedData.map(item => item.budgetCapacity),\n          },\n        ],\n      };\n\n      canvas.chart = new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          scales: {\n            x: { stacked: true }, \n            y: { stacked: true }, \n          },\n        },\n      });\n    } catch (error) {\n      console.error('Error creating bar chart: ', error);\n    }\n  };\n\n  \n\n  const handleMonthChange = (event) => {\n    setSelectedMonth(event.target.value);\n  };\n\n  return (\n    <div className=\"budget-chart\">\n      <h3>Various Types of Budget Charts</h3>\n      <div className=\"label-container\">\n        <select value={selectedMonth} onChange={handleMonthChange}>\n          <option value=\"\">All Months</option>\n          <option value=\"1\">January</option>\n          <option value=\"2\">February</option>\n          <option value=\"3\">March</option>\n          <option value=\"4\">April</option>\n          <option value=\"5\">May</option>\n          <option value=\"6\">June</option>\n          <option value=\"7\">July</option>\n          <option value=\"8\">August</option>\n          <option value=\"9\">September</option>\n          <option value=\"10\">October</option>\n          <option value=\"11\">November</option>\n          <option value=\"12\">December</option>\n        </select>\n      </div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"scrollable-container\">\n          <div className=\"charts-container\">\n            <div className=\"chart\">\n              <h3>Current Period Budget Allocation versus Cumulative Budget</h3>\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\n                <canvas className=\"budget-canvas\" ref={barChartCanvasRef} width={800} height={800}></canvas>\n              )}\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\n            </div>\n            <div className=\"chart\">\n              <h3>Current Period Budget Allocation</h3>\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\n                <canvas className=\"budget-pie-canvas\" ref={pieChartCanvasRef} width={800} height={800}></canvas>\n              )}\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\n            </div>\n          </div>\n\n            <div className=\"chart\">\n              <h3>Current Period Budget Allocation versus Cumulative Budget</h3>\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\n                <canvas className=\"budget-line-canvas\" ref={lineChartCanvasRef} width={400} height={400}></canvas>\n              )}\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EconomicChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}