{"ast":null,"code":"var _jsxFileName = \"D:\\\\NBAD\\\\NBAD-React_Final_Project-main_1\\\\NBAD-React_Final_Project-main\\\\src\\\\components\\\\Auth\\\\AccessState.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authUtilities from '../services/authUtilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserAuthContext = /*#__PURE__*/createContext();\nexport const useUserAuth = () => {\n  _s();\n  const context = useContext(UserAuthContext);\n  if (!context) {\n    throw new Error('useUserAuth must be used within a UserAuthProvider');\n  }\n  return context;\n};\n_s(useUserAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserAuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [loggedInUser, setLoggedInUser] = useState(false);\n  const [authToken, setAuthToken] = useState(null);\n  const loginUser = token => {\n    setAuthToken(token);\n    setLoggedInUser(true);\n    localStorage.setItem('authToken', token);\n  };\n  useEffect(() => {\n    const storedAuthToken = localStorage.getItem('authToken');\n    console.log('Stored Auth Token:', storedAuthToken);\n    if (storedAuthToken) {\n      setAuthToken(storedAuthToken);\n      setLoggedInUser(true);\n    }\n  }, []);\n  const refreshUserToken = async () => {\n    try {\n      const newAuthToken = await authUtilities.refreshUserToken();\n      setAuthToken(newAuthToken);\n      localStorage.setItem('authToken', newAuthToken);\n      return newAuthToken;\n    } catch (error) {\n      console.error('Error refreshing user token:', error);\n      logoutUser();\n    }\n  };\n  const checkTokenExpiration = () => {\n    const expirationTime = Math.floor(Date.now() / 1000) + 60;\n    const currentTime = Date.now() / 1000;\n    return currentTime < expirationTime;\n  };\n  const logoutUser = () => {\n    setAuthToken(null);\n    setLoggedInUser(false);\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userJwt');\n    localStorage.removeItem('userRefreshToken');\n    window.location.reload();\n  };\n  const setAccessToken = newToken => {\n    setAuthToken(newToken);\n    localStorage.setItem('authToken', newToken);\n  };\n  return /*#__PURE__*/_jsxDEV(UserAuthContext.Provider, {\n    value: {\n      loggedInUser,\n      authToken,\n      loginUser,\n      logoutUser,\n      refreshUserToken,\n      checkTokenExpiration,\n      setAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserAuthProvider, \"9e1gAv2Ewoi3h4c/4PdIo/Zz8Fs=\");\n_c = UserAuthProvider;\nvar _c;\n$RefreshReg$(_c, \"UserAuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authUtilities","jsxDEV","_jsxDEV","UserAuthContext","useUserAuth","_s","context","Error","UserAuthProvider","children","_s2","loggedInUser","setLoggedInUser","authToken","setAuthToken","loginUser","token","localStorage","setItem","storedAuthToken","getItem","console","log","refreshUserToken","newAuthToken","error","logoutUser","checkTokenExpiration","expirationTime","Math","floor","Date","now","currentTime","removeItem","window","location","reload","setAccessToken","newToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/NBAD/NBAD-React_Final_Project-main_1/NBAD-React_Final_Project-main/src/components/Auth/AccessState.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport authUtilities from '../services/authUtilities';\n\nconst UserAuthContext = createContext();\nexport const useUserAuth = () => {\n  const context = useContext(UserAuthContext);\n  if (!context) {\n    throw new Error('useUserAuth must be used within a UserAuthProvider');\n  }\n  return context;\n};\n\nexport const UserAuthProvider = ({ children }) => {\n  const [loggedInUser, setLoggedInUser] = useState(false);\n  const [authToken, setAuthToken] = useState(null);\n\n \n\n  const loginUser = (token) => {\n    setAuthToken(token);\n    setLoggedInUser(true);\n    localStorage.setItem('authToken', token);\n  };\n  useEffect(() => {\n    const storedAuthToken = localStorage.getItem('authToken');\n    console.log('Stored Auth Token:', storedAuthToken);\n\n    if (storedAuthToken) {\n      setAuthToken(storedAuthToken);\n      setLoggedInUser(true);\n    }\n  }, []);\n  const refreshUserToken = async () => {\n    try {\n      const newAuthToken = await authUtilities.refreshUserToken();\n      setAuthToken(newAuthToken);\n      localStorage.setItem('authToken', newAuthToken);\n      return newAuthToken;\n    } catch (error) {\n      console.error('Error refreshing user token:', error);\n      logoutUser();\n    }\n  };\n\n  const checkTokenExpiration = () => {\n    const expirationTime = Math.floor(Date.now() / 1000) + 60;\n    const currentTime = Date.now() / 1000;\n\n    return currentTime < expirationTime;\n  };\n  const logoutUser = () => {\n    setAuthToken(null);\n    setLoggedInUser(false);\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userJwt');\n    localStorage.removeItem('userRefreshToken');\n    window.location.reload();\n  };\n\n \n\n  const setAccessToken = (newToken) => {\n    setAuthToken(newToken);\n    localStorage.setItem('authToken', newToken);\n  };\n\n  return (\n    <UserAuthContext.Provider\n      value={{\n        loggedInUser,\n        authToken,\n        loginUser,\n        logoutUser,\n        refreshUserToken,\n        checkTokenExpiration,\n        setAccessToken,\n      }}\n    >\n      {children}\n    </UserAuthContext.Provider>\n  );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}