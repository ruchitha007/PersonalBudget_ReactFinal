{"ast":null,"code":"import axios from 'axios';\nimport config from '../../config';\nconst API_BASE_URL = config.apiUrl;\nconst authService = {\n  userRegistration: async (fullName, username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/register`, {\n        fullName,\n        username,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error during signup:', error);\n      throw error;\n    }\n  },\n  checkUserTokenExpiry: () => {\n    const expirationTime = Math.floor(Date.now() / 1000) + 50;\n    const currentTime = Date.now() / 1000;\n    return currentTime < expirationTime;\n  },\n  refreshAccessToken: async () => {\n    try {\n      let refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        const response = await axios.get(`${API_BASE_URL}/api/auth/refreshAccessToken`);\n        refreshToken = response.data.refreshToken;\n        localStorage.setItem('refreshToken', refreshToken);\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/auth/refreshAccessToken`, {\n        refreshToken\n      });\n      const newToken = response.data.accessToken;\n      localStorage.setItem('token', newToken);\n      return newToken;\n    } catch (error) {\n      console.error('Error refreshing access token:', error);\n      throw error;\n    }\n  },\n  userLogin: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        username,\n        password\n      });\n      const {\n        token,\n        refreshToken\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      return token;\n    } catch (error) {\n      console.error('Error during login:', error);\n      throw error;\n    }\n  },\n  makeAuthenticatedRequest: async (url, options = {}) => {\n    try {\n      let token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token available');\n      }\n      const isTokenExpired = authService.checkUserTokenExpiry(token);\n      if (isTokenExpired) {\n        token = await authService.refreshAccessToken();\n        if (!token) {\n          throw new Error('Failed to refresh token');\n        }\n      }\n      const response = await axios(url, {\n        ...options,\n        headers: {\n          ...options.headers,\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Authenticated request error:', error);\n      throw error;\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","config","API_BASE_URL","apiUrl","authService","userRegistration","fullName","username","password","response","post","data","error","console","checkUserTokenExpiry","expirationTime","Math","floor","Date","now","currentTime","refreshAccessToken","refreshToken","localStorage","getItem","get","setItem","newToken","accessToken","userLogin","token","makeAuthenticatedRequest","url","options","Error","isTokenExpired","headers","Authorization"],"sources":["D:/NBAD/NBAD-React_Final_Project-main_1/NBAD-React_Final_Project-main/src/components/services/authService.js"],"sourcesContent":["import axios from 'axios';\nimport config from '../../config';\n\nconst API_BASE_URL = config.apiUrl;\n\nconst authService = {\n  userRegistration: async (fullName, username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/register`, {\n        fullName,\n        username,\n        password,\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error during signup:', error);\n      throw error;\n    }\n  },\n  checkUserTokenExpiry: () => {\n    const expirationTime = Math.floor(Date.now() / 1000) + 50;\n    const currentTime = Date.now() / 1000;\n\n    return currentTime < expirationTime;\n  },\n\n  refreshAccessToken: async () => {\n    try {\n      let refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        const response = await axios.get(`${API_BASE_URL}/api/auth/refreshAccessToken`);\n        refreshToken = response.data.refreshToken;\n\n        localStorage.setItem('refreshToken', refreshToken);\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/auth/refreshAccessToken`, {\n        refreshToken,\n      });\n      const newToken = response.data.accessToken;\n      localStorage.setItem('token', newToken);\n\n      return newToken;\n    } catch (error) {\n      console.error('Error refreshing access token:', error);\n      throw error;\n    }\n  },\n\n  userLogin: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        username,\n        password,\n      });\n\n      const { token, refreshToken } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n\n      return token;\n    } catch (error) {\n      console.error('Error during login:', error);\n      throw error;\n    }\n  },\n\n  makeAuthenticatedRequest: async (url, options = {}) => {\n    try {\n      let token = localStorage.getItem('token');\n\n      if (!token) {\n        throw new Error('No token available');\n      }\n\n      const isTokenExpired = authService.checkUserTokenExpiry(token);\n\n      if (isTokenExpired) {\n        token = await authService.refreshAccessToken();\n        if (!token) {\n          throw new Error('Failed to refresh token');\n        }\n      }\n\n      const response = await axios(url, {\n        ...options,\n        headers: {\n          ...options.headers,\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return response.data;\n    } catch (error) {\n      console.error('Authenticated request error:', error);\n      throw error;\n    }\n  },\n};\n\nexport default authService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}